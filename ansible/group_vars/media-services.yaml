---
# ironicbadger.docker_compose_generator
appdata_path: /mnt/docker
container_media_path: /mnt/media
docker_compose_generator_output_path: "/mnt/ansible"

# global vars
global_env_vars:
  - "PUID={{ docker_compose_generator_uid }}"
  - "PGID={{ docker_compose_generator_gid }}"
  - "UMASK={{ docker_compose_generator_umask }}"
  - "TZ={{ ntp_timezone }}"

containers:
  - service_name: prowlarr
    active: true
    image: "lscr.io/linuxserver/prowlarr:latest"
    container_name: "prowlarr"
    volumes:
      - "{{ appdata_path }}/prowlarr:/config"
      - "{{ container_media_path }}:/data"
    ports:
      - 9696:9696
    include_global_env_vars: true
    restart: unless-stopped
###
  - service_name: radarr
    active: true
    image: "lscr.io/linuxserver/radarr:latest"
    container_name: "radarr"
    volumes:
      - "{{ appdata_path }}/radarr:/config"
      - "{{ container_media_path }}:/data"
    ports:
      - 7878:7878
    include_global_env_vars: true
    restart: unless-stopped
###
  - service_name: sonarr
    active: true
    image: "lscr.io/linuxserver/sonarr:latest"
    container_name: "sonarr"
    volumes:
      - "{{ appdata_path }}/sonarr:/config"
      - "{{ container_media_path }}:/data"
    ports:
      - 8989:8989
    include_global_env_vars: true
    restart: unless-stopped
###
  - service_name: animarr
    active: true
    image: "lscr.io/linuxserver/sonarr:latest"
    container_name: "animarr"
    volumes:
      - "{{ appdata_path }}/animarr:/config"
      - "{{ container_media_path }}:/data"
    ports:
      - 8988:8989
    include_global_env_vars: true
    restart: unless-stopped
###
  - service_name: bazarr
    active: true
    image: "lscr.io/linuxserver/bazarr:latest"
    container_name: "bazarr"
    volumes:
      - "{{ appdata_path }}/bazarr:/config"
      - "{{ container_media_path }}:/data"
    ports:
      - 6767:6767
    include_global_env_vars: true
    restart: unless-stopped
###
  - service_name: portainer_agent
    active: true
    image: portainer/agent:2.19.5
    ports:
      - 9001:9001
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    restart: always
###
  - service_name: watchtower
    active: true
    image: containrrr/watchtower:latest
    environment:
      WATCHTOWER_SCHEDULE: "0 0 4 * * *"
      # WATCHTOWER_RUN_ONCE: true
      WATCHTOWER_DEBUG: false
      WATCHTOWER_CLEANUP: true
      WATCHTOWER_INCLUDE_RESTARTING: true
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    restart: always
    include_global_env_vars: true